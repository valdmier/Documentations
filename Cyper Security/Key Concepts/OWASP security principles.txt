OWASP principles or open web applications security project.

OWASP principles:

1- Minimize attack surface area: 
potential vulnerabilities a threat actor could exploit.

2- Least privilege:
least amount of access required to perform their tasks.

3- Defense in depth:
varying security controls that mitigate risks and threats.

4- Separation of duties:
Critical actions should rely on multiple people

5- Keep security simple:
 Avoid unnecessarily complicated solutions

6- Fix security issues correctly:
identify the root cause, contain the impact, identify vulnerabilities.
---

7- Establish secure defaults:
the optimal security state of an application is also its default state

8- Fail securely:
 control fails or stops, it should do so by defaulting to its most secure option.

9- Don’t trust services:
organization shouldn’t explicitly trust that their partners’ systems are secure. 

10- Avoid security by obscurity:
The security of key systems should not rely on keeping details hidden. application should not rely on keeping the source code secret. 

===
WASP security principles. These included:

- Minimize attack surface area: Attack surface refers to all the potential vulnerabilities a threat actor could exploit.

- Principle of least privilege: Users have the least amount of access required to perform their everyday tasks.

- Defense in depth: Organizations should have varying security controls that mitigate risks and threats.

- Separation of duties: Critical actions should rely on multiple people, each of whom follow the principle of least privilege. 

- Keep security simple: Avoid unnecessarily complicated solutions. Complexity makes security difficult. 

- Fix security issues correctly: When security incidents occur, identify the root cause, contain the impact, identify vulnerabilities, and conduct tests to ensure that remediation is successful.


===
Additional OWASP security principles:

- Establish secure defaults:

This principle means that the optimal security state of an application is also its default state for users; it should take extra work to make the application insecu

- Fail securely:

Fail securely means that when a control fails or stops, it should do so by defaulting to its most secure option. For example, when a firewall fails it should simply close all connections and block all new ones, rather than start accepting everything.

- Don’t trust services

The security of an application should not rely on keeping the source code secret. Its security should rely upon many other factors, including reasonable password policies, defense in depth, business transaction limits, solid network architecture, and fraud and audit controls.