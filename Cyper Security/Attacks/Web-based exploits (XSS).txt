Web-based exploits

===
Injection Attacks: 

Injection attacks involve the insertion of malicious code into a vulnerable application. This code often runs in the background, unbeknownst to the user. Web applications are susceptible to injection attacks because they handle user inputs, which may include various forms of data.

===
Data Validation:

 Properly coded applications should validate and sanitize user inputs to ensure they meet specific criteria.

For example, input validation for a phone number field might require all numeric characters and a maximum length of ten digits.

===
Cross-Site Scripting (XSS):

 XSS is a common and dangerous type of injection attack that inserts malicious code into a vulnerable website or web application.

It exploits HTML and JavaScript, providing cybercriminals access to various information, including cookies, geolocation, and even webcams and microphones.

===
Types of XSS Attacks: There are three main types of XSS attacks:

===
Reflected XSS:

Malicious scripts are sent to the server and executed during the server's response. This often involves sending a web link to a victim that appears to go to a trusted site. The attacker's script is reflected back to the victim's browser and executed.

===
Stored XSS:

Malicious scripts are injected directly onto the server, targeting elements of the site that are served to users. These scripts are activated when users visit the infected site.


===
DOM-Based XSS: 

This attack involves malicious script existing in the web page itself, without needing to be sent to the server for activation. The script is typically visible in the URL, and attackers manipulate parameter values to execute the script.